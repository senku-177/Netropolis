{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\webdev\\\\Netropolis\\\\netropolis\\\\src\\\\pages\\\\QuestRegisterPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport TaskCard from \"../cards/Taskcard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestRegisterPage() {\n  _s();\n  const [stateList, setStateList] = useState([]);\n  const [cityData, setCityData] = useState([]);\n  useEffect(() => {\n    fetchStates();\n  }, []);\n  function taskRender(task) {\n    const t1 = {\n      ...task\n    };\n    delete t1._id;\n    return t1;\n  }\n  async function citiesFetch(state) {\n    console.log(state);\n    try {\n      const response = await fetch(\"/QuestRegisterPage_cities\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"state\": state\n        })\n      });\n      if (response.ok) {\n        const cities = await response.json();\n        setCityData(cities);\n        console.log(\"citydata:\", cityData);\n      }\n    } catch (err) {\n      console.log(\"error:\", err);\n    }\n  }\n  async function fetchStates() {\n    try {\n      const response = await fetch(\"/QuestRegisterPage_state\", {\n        methods: \"GET\"\n      });\n      const stateData = await response.json();\n      setStateList(stateData);\n      console.log(stateData);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/5 bg-gray-200 p-4 h-full flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"States List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 p-1 flex-col h-full overflow-y-scroll\",\n        children: stateList.map((state, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-1 cursor-pointer\",\n          onClick: () => citiesFetch(state),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-gray-300 p-4 h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Availabe tasks in Cities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cityData.map((cityEntry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: cityEntry._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-4\",\n            children: cityEntry.entries.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n              data: taskRender(task)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 bg-gray-200 p-4 h-full\",\n      children: \"Sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(QuestRegisterPage, \"9JNpS359LWdpuzacmNvfIQbx4YY=\");\n_c = QuestRegisterPage;\nexport default QuestRegisterPage;\nvar _c;\n$RefreshReg$(_c, \"QuestRegisterPage\");","map":{"version":3,"names":["useEffect","useState","TaskCard","jsxDEV","_jsxDEV","QuestRegisterPage","_s","stateList","setStateList","cityData","setCityData","fetchStates","taskRender","task","t1","_id","citiesFetch","state","console","log","response","fetch","method","headers","body","JSON","stringify","ok","cities","json","err","methods","stateData","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","cityEntry","entries","data","_c","$RefreshReg$"],"sources":["D:/code/webdev/Netropolis/netropolis/src/pages/QuestRegisterPage.js"],"sourcesContent":["import { useEffect,useState } from \"react\";\r\nimport TaskCard from \"../cards/Taskcard\";\r\n\r\nfunction QuestRegisterPage(){\r\n    const [stateList, setStateList]=useState([]);\r\n    const [cityData,setCityData]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        fetchStates();\r\n    },[]);\r\n\r\n    function taskRender(task){\r\n        const t1={...task}\r\n        delete t1._id\r\n\r\n        return t1\r\n    }\r\n\r\n    async function citiesFetch(state){\r\n        console.log(state);\r\n        try{\r\n          const response=  await fetch(\"/QuestRegisterPage_cities\",{\r\n                method:\"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                body:JSON.stringify({\"state\":state})\r\n            })\r\n\r\n            if(response.ok){\r\n                const cities=await response.json()\r\n                setCityData(cities);\r\n                console.log(\"citydata:\",cityData);\r\n\r\n            }\r\n\r\n        }\r\n        catch(err){\r\n            console.log(\"error:\",err);\r\n        }\r\n    }\r\n\r\n    async function fetchStates(){\r\n        try{\r\n            const response = await fetch(\"/QuestRegisterPage_state\",{\r\n                methods:\"GET\",\r\n                \r\n            }) \r\n            const stateData = await response.json();\r\n            setStateList(stateData);\r\n            console.log(stateData);\r\n        }\r\n        catch(error){\r\n            console.log(\"error\",error);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex h-screen\">\r\n        <div className=\"w-1/5 bg-gray-200 p-4 h-full flex-col\">\r\n            <h2>States List</h2>\r\n            <div className=\"mt-2 p-1 flex-col h-full overflow-y-scroll\">\r\n            {   \r\n                stateList.map((state, index) => (\r\n                    <div key={index} className=\"p-1 cursor-pointer\" onClick={()=>citiesFetch(state)}>\r\n                        <p>{state}</p>\r\n                    </div>\r\n                ))\r\n            }\r\n            </div>\r\n        </div>\r\n        <div className=\"w-full bg-gray-300 p-4 h-full\">\r\n            <h2>Availabe tasks in Cities</h2>\r\n            <div>\r\n                {\r\n                    cityData.map((cityEntry,index)=>(\r\n\r\n\r\n                        <div>\r\n                            <h2>{cityEntry._id}</h2>\r\n                            <div className=\"flex gap-4\">\r\n                            {\r\n                            \r\n                            cityEntry.entries.map((task)=>(\r\n                                \r\n                                \r\n                                <TaskCard data={taskRender(task)}></TaskCard>\r\n                                \r\n                             ))\r\n\r\n                             }\r\n                             </div>\r\n                        </div>\r\n\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n            \r\n            </div>\r\n        <div className=\"w-1/4 bg-gray-200 p-4 h-full\">Sidebar</div>\r\n      </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default QuestRegisterPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}