{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\webdev\\\\Netropolis\\\\netropolis\\\\src\\\\pages\\\\QuestDetailsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; // If using React Router for routing\nimport { useState } from 'react';\nimport { IoResizeSharp } from 'react-icons/io5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestDetailsPage = () => {\n  _s();\n  // Use useParams to extract the quest ID from the URL\n  const {\n    questId\n  } = useParams();\n  const [quest, setQuest] = useState([]);\n  const apiurl = process.env.REACT_APP_API_URL;\n  useEffect(async () => {\n    console.log(\"questId\", questId);\n    try {\n      const val = localStorage.getItem(\"user\");\n      const response = await fetch(`${apiurl}questId?keyword=${questId}`, {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\": `Bearer ${val.token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setQuest(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  // Function to handle image click and update selectedImage\n  const handleImageClick = image => {\n    setSelectedImage(image);\n  };\n\n  // Mock data for the quest (replace with actual data)\n\n  //    let images: [\n  //       'image1.jpg',\n  //       'image2.jpg',\n  //       'image3.jpg'\n  //     ]\n\n  const [selectedImage, setSelectedImage] = useState(quest.images[0]);\n  // Render the quest details\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto bg-white shadow-md rounded-lg overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold mb-2\",\n          children: quest.QuestName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-4\",\n          children: quest.itinerary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-4\",\n          children: [\"Charges: \", quest.charges]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-4\",\n          children: quest.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-4\",\n          children: [\"Length: \", quest.length, \" days\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-4\",\n          children: [\"Tasks: \", quest.tasks.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestDetailsPage, \"yhtmVpp2lAgAJt2h85aPKsRKUEY=\", false, function () {\n  return [useParams];\n});\n_c = QuestDetailsPage;\nexport default QuestDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"QuestDetailsPage\");","map":{"version":3,"names":["React","useEffect","useParams","useState","IoResizeSharp","jsxDEV","_jsxDEV","QuestDetailsPage","_s","questId","quest","setQuest","apiurl","process","env","REACT_APP_API_URL","console","log","val","localStorage","getItem","response","fetch","method","headers","token","ok","data","json","err","handleImageClick","image","setSelectedImage","selectedImage","images","className","children","QuestName","fileName","_jsxFileName","lineNumber","columnNumber","itinerary","charges","details","length","tasks","state","_c","$RefreshReg$"],"sources":["D:/code/webdev/Netropolis/netropolis/src/pages/QuestDetailsPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'; // If using React Router for routing\r\nimport { useState } from 'react';\r\nimport { IoResizeSharp } from 'react-icons/io5';\r\n\r\nconst QuestDetailsPage = () => {\r\n  // Use useParams to extract the quest ID from the URL\r\n  const { questId } = useParams();\r\n  const [quest,setQuest]=useState([]);\r\n    const apiurl=process.env.REACT_APP_API_URL\r\n  useEffect(async()=>{\r\n    console.log(\"questId\",questId);\r\n    try{\r\n        const val = localStorage.getItem(\"user\")\r\n        const response = await fetch(`${apiurl}questId?keyword=${questId}`,{\r\n            method:\"GET\",\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\":`Bearer ${val.token}`\r\n            },\r\n\r\n\r\n        })\r\n        if(response.ok){\r\n            const data = await response.json();\r\n            setQuest(data);\r\n        }\r\n\r\n        \r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n  },[])\r\n \r\n\r\n  // Function to handle image click and update selectedImage\r\n  const handleImageClick = (image) => {\r\n    setSelectedImage(image);\r\n  };\r\n\r\n  // Mock data for the quest (replace with actual data)\r\n  \r\n//    let images: [\r\n//       'image1.jpg',\r\n//       'image2.jpg',\r\n//       'image3.jpg'\r\n//     ]\r\n\r\n  const [selectedImage, setSelectedImage] = useState(quest.images[0]);\r\n  // Render the quest details\r\n  return (\r\n    <div className=\"container mx-auto p-8\">\r\n      <div className=\"max-w-6xl mx-auto bg-white shadow-md rounded-lg overflow-hidden\">\r\n      {/* <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          {images.map((image, index) => (\r\n            <img\r\n              key={index}\r\n              className=\"h-64 w-full object-cover cursor-pointer\"\r\n              src={image}\r\n              alt={`Quest Image ${index + 1}`}\r\n              onClick={() => handleImageClick(image)}\r\n            />\r\n          ))}\r\n        </div>\r\n        {/* Selected Image */}\r\n        {/* <div className=\"p-8\">\r\n          <img className=\"h-64 w-full object-cover\" src={selectedImage} alt=\"Selected Quest Image\" />\r\n        </div> */} \r\n        <div className=\"p-8\">\r\n          <h2 className=\"text-3xl font-bold mb-2\">{quest.QuestName}</h2>\r\n          <p className=\"text-gray-700 mb-4\">{quest.itinerary}</p>\r\n          <p className=\"text-gray-700 mb-4\">Charges: {quest.charges}</p>\r\n          <p className=\"text-gray-700 mb-4\">{quest.details}</p>\r\n          <p className=\"text-gray-700 mb-4\">Length: {quest.length} days</p>\r\n          <p className=\"text-gray-700 mb-4\">Tasks: {quest.tasks.state}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestDetailsPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}